#!/usr/bin/env node

if (!process.argv[2]) {
	console.log("Usage: node [options] json2htmlcov.js [source.json]");
	process.exit();
}

sourceFile = process.argv[2];

// https://github.com/metaskills/mocha-phantomjs/issues/10
var jade = require('jade');
var fs = require('fs');

// Strings for code coverage classes
function coverageClass(n) {
  if (n >= 75) return 'high';
  if (n >= 50) return 'medium';
  if (n >= 25) return 'low';
  return 'terrible';
}

// Read in templates
var file = __dirname + '/templates/coverage.jade';
var str = fs.readFileSync(file, 'utf8');
var fn = jade.compile(str, { filename: file });

// Read JSON from stdin
// var cov = JSON.parse(fs.readFileSync('/dev/stdin').toString());
var cov = JSON.parse(fs.readFileSync(sourceFile).toString());

// Dump HTML
process.stdout.write(fn({
    cov: cov,
    coverageClass: coverageClass
}));
